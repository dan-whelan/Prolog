%CSU34011 - Symbolic Programming 
%Problem 1 - DCG for neighbourhood
nbd --> h(Col1,Nat1,Pet1),h(Col2,Nat2,Pet2),h(Col3,Nat3,Pet3), {
      Col1 \== Col2, Col2 \== Col3, Col1 \== Col3,
      Nat1 \== Nat2, Nat2 \== Nat3, Nat1 \== Nat3,
      Pet1 \== Pet2, Pet2 \== Pet3, Pet1 \== Pet3}.

h(Col,Nat,Pet) --> colour(Col), nationality(Nat), pet(Pet).

colour('red') --> [red].
colour('blue') --> [blue].
colour('green') --> [green].

nationality('english') --> [english].
nationality('japanese') --> [japanese].
nationality('spanish') --> [spanish].

pet('snail') --> [snail].
pet('jaguar') --> [jaguar].
pet('zebra') --> [zebra].

%Problem 2 - DCG for Fibonacci Sequence
fib --> [0, 1], fibonacci(0,1).
fibonacci(_,_) --> [].
fibonacci(Fib1,Fib2) --> 
      {Fib is Fib1 + Fib2},
      [Fib],
      fibonacci(Fib2,Fib).  
       

%Problem 3 - For Language Ln
accept(N, String) :- steps(N,q0,String,Q), final(N,Q).
steps(_,Q,[],Q).
steps(N,Q1,[H|T],Q2) :- tran(N,Q1,H,Q), N1 is N - 1, steps(N1,Q,T,Q2).
%(a) (i) tran/4s
tran(_,q0,[],q1).
tran(_,q0,0,q1).
tran(_,q0,1,q1).
tran(_,q0,0,q0).
tran(_,q0,1,q0).

tran(_,q1,1,q2).

tran(N,q2,0,q3) :- N == 0.
tran(N,q2,1,q3) :- N == 0.
tran(N,q2,0,q2) :- N > 0.
tran(N,q2,1,q2) :- N > 0.

%(a)(ii) final/2
final(_,q3).

%(b)
s(N, String) :- length(String,_),phrase(lang(N), String).
lang(N) --> 
      beforeN01,
      [1],
      {N1 is N - 1},
      afterN01(N1).
give01 --> [0] ; [1].
beforeN01 --> [] ; give01, beforeN01.
afterN01(0) --> [].
afterN01(N) --> 
      give01,
      {N1 is N - 1,
      N1 >= 0},
      afterN01(N1).

%(c)
get(1,X,[X|_]).
get(I,X,[_|Xs]) :-
      I > 1,
      I1 is I - 1,
      get(I1,X,Xs).
ith(I,N,String) :- s(N,L), get(I,String,L).

initial(I,N,String) :- 
      I >= 0,
      ith(I,N,String),
      I1 is I-1,
      initial(I1,N,String),
      [String].



      
